{"version":3,"sources":["components/ContactAddingForm/ContactAddingForm.js","components/ContactFilter/ContactFilter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Notification/Notification.js","App.js","index.js","components/ContactAddingForm/ContactAddingForm.module.css"],"names":["ContactAddingForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","labelContainer","Object","keys","map","labelName","label","labelText","inputText","type","onChange","required","submitBtn","submitBtn__text","Component","ContactFilter","ContactListItem","deleteContact","onClick","ContactList","contacts","id","Notification","message","App","filter","findInContacts","newContactName","find","handleContactCart","newContactCart","doubleContact","onDoubleAddingReaction","addNewContact","changeStateFilter","contactId","newContactList","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","newContact","uuidv4","alert","filterNormalized","toLocaleLowerCase","filteredContacts","includes","length","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dbdcd637.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport s from './ContactAddingForm.module.css';\r\n\r\nexport class ContactAddingForm extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({[name]:value});\r\n    }\r\n\r\n    handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n    reset = () => {\r\n        this.setState({ name: '', number: ''});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className={s.form} onSubmit={this.handleSubmit}>\r\n                <div className={s.labelContainer}>\r\n                    {Object.keys(this.state).map(\r\n                        (labelName) => { \r\n                            return (\r\n\r\n                                <label key={labelName} className={s.label}>\r\n                                    <span className={s.labelText}>{labelName}</span>\r\n                                    <input\r\n                                        className={s.inputText}\r\n                                        type=\"text\"\r\n                                        name={labelName}\r\n                                        value={this.state[labelName]}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                    />\r\n                                </label>\r\n                            );\r\n                        }\r\n                    )}\r\n                </div>\r\n      \r\n                <button className={s.submitBtn} type=\"submit\">\r\n                    <span className={s.submitBtn__text}>Add contact</span>\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ContactAddingForm\r\n\r\n","import React from 'react'\r\n\r\nfunction ContactFilter({value, onChange}) {\r\n    return (\r\n         <label>\r\n             Find contacts by name\r\n             <input\r\n                 type=\"text\"\r\n                 name=\"filter\"\r\n                 value={value}\r\n                 onChange={onChange}\r\n             />\r\n         </label>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactFilter\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ContactListItem({ name, number, deleteContact}) {\r\n    return (\r\n        <>\r\n            <span>{name} : {number}</span> <button type=\"button\" onClick={deleteContact} >delete</button>\r\n        </>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ContactListItem\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ContactListItem from './ContactListItem/ContactListItem'\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n    return (\r\n        <ul>\r\n            {contacts.map(\r\n                ({ id, name, number }) => \r\n                    (<li key={id}>\r\n                        <ContactListItem\r\n                            name={name}\r\n                            number={number}\r\n                            deleteContact={()=>deleteContact(id)}\r\n                        />\r\n                    </li>)\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n    }))\r\n}\r\n\r\nexport default ContactList\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p className=\"messageNotification\">\r\n            {message}\r\n        </p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification\r\n\r\n","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactAddingForm from './components/ContactAddingForm/ContactAddingForm'\nimport ContactFilter from './components/ContactFilter/ContactFilter'\nimport ContactList from './components/ContactList/ContactList'\nimport Notification from './components/Notification/Notification'\n\nexport class App extends Component {\n  state = {\n    filter: '',\n    contacts: [],\n    \n  }\n\n  componentDidMount() {\n      console.log('App componentDidMount');\n\n      const contacts = localStorage.getItem('contacts');\n      const parsedContacts = JSON.parse(contacts);\n\n      if (parsedContacts) {\n        this.setState({ contacts: parsedContacts });\n      }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    const newContactList = this.state.contacts;\n    const prevContactList = prevState.contacts;\n\n    if (newContactList !== prevContactList) {\n      console.log('Обновилось поле contacts, записываю contacts в хранилище');\n      localStorage.setItem('contacts', JSON.stringify(newContactList));\n    }\n  }\n\n  findInContacts = (newContactName) => this.state.contacts.find(({ name }) => name === newContactName);\n  \n  addNewContact(newContactCart){\n    const newContact = {id:uuidv4(),...newContactCart};\n    this.setState(\n      ({ contacts }) => \n      ({contacts: [newContact,...contacts], })\n    );\n  }\n\n  onDoubleAddingReaction(doubleContact) { \n    const { name } = doubleContact;      \n    alert(name + ' is already in contacts.');\n\n    this.setState({ filter: name });\n  }\n\n  handleContactCart = (newContactCart) =>{   \n    const doubleContact = this.findInContacts(newContactCart.name);  \n    if (doubleContact) { \n      this.onDoubleAddingReaction(doubleContact);\n      return\n    }\n    this.addNewContact(newContactCart)\n  }\n\n\n  changeStateFilter = (e) => { \n    const {name, value } = e.currentTarget;\n    this.setState({ [name]: value });    \n  }\n\n  deleteContact = (contactId) => { \n    const newContactList = this.state.contacts.filter(\n      ({id}) =>(id !== contactId)\n    );\n    this.setState({\n      contacts: newContactList\n    });\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n    const filterNormalized = filter.toLocaleLowerCase();\n    const filteredContacts = contacts.filter(\n      ({name}) => name.toLocaleLowerCase().includes(filterNormalized)\n    );\n\n    return (\n      <>\n        <h1>Phonebook</h1>  \n        <ContactAddingForm onSubmit={this.handleContactCart} />\n\n        {(contacts.length > 0)\n          ?\n          (<>\n        <h2>Contacts</h2>\n        <ContactFilter value={filter} onChange={this.changeStateFilter} />\n        <ContactList contacts={filteredContacts} deleteContact={this.deleteContact}/>\n          </>)\n          :\n          <Notification message=\"PhoneBook is emty\"/>\n        }\n        \n      </>\n    )\n  }\n}\n\nexport default App\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactAddingForm_form__31aq2\",\"labelContainer\":\"ContactAddingForm_labelContainer__345Em\",\"label\":\"ContactAddingForm_label__3Krl-\",\"labelText\":\"ContactAddingForm_labelText__5wHfP\",\"inputText\":\"ContactAddingForm_inputText__11EQF\",\"submitBtn\":\"ContactAddingForm_submitBtn__3Boe2\",\"submitBtn__text\":\"ContactAddingForm_submitBtn__text__2kE-k\"};"],"sourceRoot":""}