{"version":3,"sources":["components/ContactAddingForm/ContactAddingForm.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactFilter/ContactFilter.module.css","components/ContactList/ContactList.module.css","components/ContactsBook/ContactsBook.module.css","components/ContactAddingForm/ContactAddingForm.js","components/Notification/Notification.js","components/ContactsBook/ContactsBook.js","components/ContactFilter/ContactFilter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactAddingForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","labelContainer","label","labelText","inputText","type","onChange","required","pattern","placeholder","submitBtn","submitBtn__text","Component","Notification","message","ContactsBook","totalNumber","children","contactsContainer","ContactFilter","input","ContactListItem","deleteContact","deleteBtn","onClick","ContactList","contacts","length","list","map","id","item","App","filter","findInContacts","newContactName","find","handleContactCart","newContactCart","doubleContact","onDoubleAddingReaction","addNewContact","changeStateFilter","contactId","console","log","newContactList","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","newContact","uuidv4","alert","filterNormalized","toLocaleLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84e54515.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactAddingForm_form__31aq2\",\"labelContainer\":\"ContactAddingForm_labelContainer__345Em\",\"label\":\"ContactAddingForm_label__3Krl-\",\"labelText\":\"ContactAddingForm_labelText__5wHfP\",\"inputText\":\"ContactAddingForm_inputText__11EQF\",\"submitBtn\":\"ContactAddingForm_submitBtn__3Boe2\",\"submitBtn__text\":\"ContactAddingForm_submitBtn__text__2kE-k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__1I3TU\",\"number\":\"ContactListItem_number__1eR88\",\"deleteBtn\":\"ContactListItem_deleteBtn__1W-nQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__SsnuA\",\"input\":\"ContactFilter_input__M2i7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2WTvH\",\"item\":\"ContactList_item__1OIoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsContainer\":\"ContactsBook_contactsContainer__3eMhO\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactAddingForm.module.css';\r\n\r\nexport class ContactAddingForm extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    \r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    };\r\n\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({[name]:value});\r\n    }\r\n\r\n    handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n    reset = () => {\r\n        this.setState({ name: '', number: ''});\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className={s.form} onSubmit={this.handleSubmit}>\r\n                <div className={s.labelContainer}>\r\n                        <label className={s.label}>\r\n                            <span className={s.labelText}>Name</span>\r\n                            <input\r\n                                className={s.inputText}\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={this.handleChange}\r\n                                required\r\n                            />\r\n                        </label>\r\n                        <label className={s.label}>\r\n                            <span className={s.labelText}>Phone</span>\r\n                            <input\r\n                                className={s.inputText}\r\n                            type=\"tel\"\r\n                            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n                                name=\"number\"\r\n                                value={number}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"067-333-4444\"\r\n                                required\r\n                            />\r\n                        </label>\r\n                </div>\r\n      \r\n                <button className={s.submitBtn} type=\"submit\">\r\n                    <span className={s.submitBtn__text}>Add contact</span>\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ContactAddingForm\r\n\r\n","import PropTypes from 'prop-types'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p className=\"messageNotification\">\r\n            {message}\r\n        </p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification","import PropTypes from 'prop-types'\r\nimport Notification from '../Notification/Notification'\r\nimport s from './ContactsBook.module.css'\r\n \r\nfunction ContactsBook({totalNumber, children}) {\r\n    return (\r\n        <>\r\n            {(totalNumber > 0)\r\n                ?\r\n            (<>\r\n            <h2>Contacts</h2>\r\n                <div className={s.contactsContainer}>\r\n                    {children}\r\n                </div>\r\n            </>)\r\n                :\r\n            <Notification message=\"PhoneBook is emty\"/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nContactsBook.propTypes = {\r\n    totalNumber: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ContactsBook\r\n\r\n","import PropTypes from 'prop-types'\r\nimport s from './ContactFilter.module.css'\r\n\r\nfunction ContactFilter({value, onChange}) {\r\n    return (\r\n         <label className={s.label}>\r\n            Find contacts by name\r\n            <input\r\n                className={s.input}\r\n                 type=\"text\"\r\n                 name=\"filter\"\r\n                 value={value}\r\n                 onChange={onChange}\r\n             />\r\n         </label>\r\n    )\r\n}\r\n\r\nContactFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactFilter\r\n\r\n","import PropTypes from 'prop-types'\r\nimport s from './ContactListItem.module.css'\r\n\r\nfunction ContactListItem({ name, number, deleteContact}) {\r\n    return (\r\n        <>\r\n            <span className={s.name}>{name}</span> : <span className={s.number}>{number}</span> <button className={s.deleteBtn} type=\"button\" onClick={deleteContact} >delete</button>\r\n        </>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactListItem\r\n\r\n","import PropTypes from 'prop-types'\r\nimport ContactListItem from './ContactListItem/ContactListItem'\r\nimport Notification from '../Notification/Notification'\r\nimport s from './ContactList.module.css'\r\n\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n    return (\r\n        (contacts.length > 0)\r\n        ?\r\n        <ul className={s.list}>\r\n            {contacts.map(\r\n                ({ id, name, number }) => \r\n                    (<li key={id} className={s.item}>\r\n                        <ContactListItem\r\n                            name={name}\r\n                            number={number}\r\n                            deleteContact={()=>deleteContact(id)}\r\n                        />\r\n                    </li>)\r\n            )}\r\n            </ul>\r\n            :\r\n            <Notification message=\"is Nothing finded...Try to change request\"/>\r\n            \r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n    }))\r\n}\r\n\r\nexport default ContactList\r\n\r\n","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactAddingForm from './components/ContactAddingForm/ContactAddingForm';\nimport ContactsBook from './components/ContactsBook/ContactsBook';\nimport ContactFilter from './components/ContactFilter/ContactFilter';\nimport ContactList from './components/ContactList/ContactList';\n\nexport class App extends Component {\n  state = {\n    filter: '',\n    contacts: [],    \n  }\n\n  componentDidMount() {\n      console.log('App componentDidMount');\n\n      const contacts = localStorage.getItem('contacts');\n      const parsedContacts = JSON.parse(contacts);\n\n      if (parsedContacts) {\n        this.setState({ contacts: parsedContacts });\n      }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    const newContactList = this.state.contacts;\n    const prevContactList = prevState.contacts;\n\n    if (newContactList !== prevContactList) {\n      console.log('Обновилось поле contacts, записываю contacts в хранилище');\n      localStorage.setItem('contacts', JSON.stringify(newContactList));\n    }\n  }\n\n  findInContacts = (newContactName) => this.state.contacts.find(({ name }) => name === newContactName);\n  \n  addNewContact(newContactCart){\n    const newContact = {id:uuidv4(),...newContactCart};\n    this.setState(\n      ({ contacts }) => \n      ({contacts: [newContact,...contacts], })\n    );\n  }\n\n  onDoubleAddingReaction(doubleContact) { \n    const { name } = doubleContact;      \n    alert(name + ' is already in contacts.');\n\n    this.setState({ filter: name });\n  }\n\n  handleContactCart = (newContactCart) =>{   \n    const doubleContact = this.findInContacts(newContactCart.name);  \n    if (doubleContact) { \n      this.onDoubleAddingReaction(doubleContact);\n      return\n    }\n    this.addNewContact(newContactCart)\n  }\n\n\n  changeStateFilter = (e) => { \n    const {name, value } = e.currentTarget;\n    this.setState({ [name]: value });    \n  }\n\n  deleteContact = (contactId) => { \n    console.log('deleteContact ' + contactId);\n    const newContactList = this.state.contacts.filter(\n      ({id}) =>(id !== contactId)\n    );\n    this.setState({\n      contacts: newContactList\n    });\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n    const filterNormalized = filter.toLocaleLowerCase();\n    const filteredContacts = contacts.filter(\n      ({name}) => name.toLocaleLowerCase().includes(filterNormalized)\n    );\n\n    return (\n      <>\n        <h1>Phonebook</h1>  \n        <ContactAddingForm onSubmit={this.handleContactCart} />\n\n        <ContactsBook totalNumber={contacts.length}>\n              <ContactFilter value={filter} onChange={this.changeStateFilter} />\n                <ContactList contacts={filteredContacts} deleteContact={this.deleteContact}/>\n        </ContactsBook>\n        \n        \n      </>\n    )\n  }\n}\n\nexport default App\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}